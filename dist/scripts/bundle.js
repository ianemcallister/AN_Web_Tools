function accountsController(t,o,e){var r=this;r.registeredUser=!1,r.forgotPassword=!1,t.info("in the accounts controller"),function(t){"CreateProfile"==t||"ForgotPassword"==t?"ForgotPassword"==t&&(r.forgotPassword=!0):r.registeredUser=!0}(o.param)}function allProductsController(t,o,e){t.info("in the all Products controller")}function cartController(t,o,e){t.info("in the cart controller")}function internalActtsController(t,o,e){t.info("in the internal controller")}function landingController(t,o,e,r,n){o.info("in the landing controller")}function locationsController(t,o,e){t.info("in the locations controller")}function loginController(t,o,e,r){var n=this,l=r;t.info("in the login controller"),n.email="",n.password="",n.login=function(){l.post("/api/authenticate",{email:n.email,pass:n.password},"").then(function(o){t.info("got this token back",o)})}}function mainController(t,o,e){t.info("in the main controller")}function dataServices(t,o){return{post:function(t,e,r){return new Promise(function(n,l){o.post(t,e,r).then(function(t){n(t.data)},function(t){l(t)})})}}}function config(t){t.when("/",{templateUrl:"views/landingPage.htm",controller:"landingController",controllerAs:"vm"}).when("/all-products",{templateUrl:"views/allProductsPage.htm",controller:"allProductsController",controllerAs:"vm"}).when("/locations",{templateUrl:"views/locationsPage.htm",controller:"locationsController",controllerAs:"vm"}).when("/login",{templateUrl:"views/loginPage.htm",controller:"loginController",controllerAs:"vm"}).when("/cart",{templateUrl:"views/cartPage.htm",controller:"cartController",controllerAs:"vm"}).when("/MyAccount/:param",{templateUrl:"views/accountsPage.htm",controller:"accountsController",controllerAs:"vm"}).when("/teamMember/:param",{templateUrl:"views/internalActtsPage.htm",controller:"internalActtsController",controllerAs:"vm",resolve:{authentication:authentication}})}function authentication(){console.log("authenticating")}function ahHeader(){function t(t,o,e,r){}function o(t,o,e){var r=this;o.info("in the header directive"),r.navbnt=function(t){o.info("clicked",t),"menu"!=t&&e.path("/"+t)}}t.$inject=["scope","el","attr","ctrl"];var e={restrict:"AECM",templateUrl:"views/directives/ah.header.directive.htm",replace:!0,scope:{},link:t,controller:o,controllerAs:"vm",bindToController:!0};return o.$inject=["$scope","$log","$location"],e}function ahFooter(){function t(t,o,e,r){}function o(t,o){o.info("in the header directive")}t.$inject=["scope","el","attr","ctrl"];var e={restrict:"AECM",templateUrl:"views/directives/ah.footer.directive.htm",replace:!0,scope:{},link:t,controller:o,controllerAs:"vm",bindToController:!0};return o.$inject=["$scope","$log"],e}function createNewAccount(){function t(t,o,e,r){}function o(t,o,e){o.info("in the create new account directive")}t.$inject=["scope","el","attr","ctrl"];var e={restrict:"AECM",templateUrl:"views/directives/createNewAccount.directive.htm",replace:!0,scope:{},link:t,controller:o,controllerAs:"vm",bindToController:!0};return o.$inject=["$scope","$log","$location"],e}function featuredProducts(){function t(t,o,e,r){}function o(t,o,e){var r=this;o.info("in the featuredProductsController directive"),r.mrPrdctsBtn=function(){e.path("/all-products")}}t.$inject=["scope","el","attr","ctrl"];var e={restrict:"AECM",templateUrl:"views/directives/featuredProducts.directive.htm",replace:!0,scope:{},link:t,controller:o,controllerAs:"vm",bindToController:!0};return o.$inject=["$scope","$log","$location"],e}function heroBanner(){function t(t,o,e,r){}function o(t,o){o.info("in the hero banner directive")}t.$inject=["scope","el","attr","ctrl"];var e={restrict:"AECM",templateUrl:"views/directives/heroBanner.directive.htm",replace:!0,scope:{},link:t,controller:o,controllerAs:"vm",bindToController:!0};return o.$inject=["$scope","$log"],e}function passwordReset(){function t(t,o,e,r){}function o(t,o,e){var r=this;o.info("in the passwordReset directive"),r.email="",r.back=function(){e.path("/login")},r.submit=function(){o.info("submitting email",r.email)}}t.$inject=["scope","el","attr","ctrl"];var e={restrict:"AECM",templateUrl:"views/directives/passwordReset.directive.htm",replace:!0,scope:{},link:t,controller:o,controllerAs:"vm",bindToController:!0};return o.$inject=["$scope","$log","$location"],e}function userDashboard(){function t(t,o,e,r){}function o(t,o,e){o.info("in the userDashboard directive")}t.$inject=["scope","el","attr","ctrl"];var e={restrict:"AECM",templateUrl:"views/directives/userDashboard.directive.htm",replace:!0,scope:{},link:t,controller:o,controllerAs:"vm",bindToController:!0};return o.$inject=["$scope","$log","$location"],e}config.$inject=["$routeProvider"];var ahNuts=angular.module("ahNuts",["ngRoute"]);angular.module("ahNuts").controller("accountsController",accountsController),accountsController.$inject=["$log","$routeParams","$location"],angular.module("ahNuts").controller("allProductsController",allProductsController),allProductsController.$inject=["$log","$routeParams","$location"],angular.module("ahNuts").controller("cartController",cartController),cartController.$inject=["$log","$routeParams","$location"],angular.module("ahNuts").controller("internalActtsController",internalActtsController),internalActtsController.$inject=["$log","$routeParams","$location"],angular.module("ahNuts").controller("landingController",landingController),landingController.$inject=["$scope","$log","$routeParams","$location","dataServices"],angular.module("ahNuts").controller("locationsController",locationsController),locationsController.$inject=["$log","$routeParams","$location"],angular.module("ahNuts").controller("loginController",loginController),loginController.$inject=["$log","$routeParams","$location","dataServices"],angular.module("ahNuts").controller("mainController",mainController),mainController.$inject=["$log","$routeParams","$location"],angular.module("ahNuts").factory("dataServices",dataServices),dataServices.$inject=["$log","$http"],angular.module("ahNuts").config(config),angular.module("ahNuts").directive("ahHeader",ahHeader),angular.module("ahNuts").directive("ahFooter",ahFooter),angular.module("ahNuts").directive("createNewAccount",createNewAccount),angular.module("ahNuts").directive("featuredProducts",featuredProducts),angular.module("ahNuts").directive("heroBanner",heroBanner),angular.module("ahNuts").directive("passwordReset",passwordReset),angular.module("ahNuts").directive("userDashboard",userDashboard);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
