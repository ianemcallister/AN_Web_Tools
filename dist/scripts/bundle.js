function aProductController(t,o,r){var e=this;e.productId=o.itemId,t.info("in the a Product controller",e.product),e.returnHome=function(){r.path("/")}}function accountsController(t,o,r){var e=this;e.registeredUser=!1,e.forgotPassword=!1,t.info("in the accounts controller"),function(t){"CreateProfile"==t||"ForgotPassword"==t?"ForgotPassword"==t&&(e.forgotPassword=!0):e.registeredUser=!0}(o.param)}function allProductsController(t,o,r){t.info("in the all Products controller")}function cartController(t,o,r,e){this.cart=e,t.info("in the cart controller")}function checkoutController(t,o,r){var e=this;t.info("in the checkout controller"),e.backBtn=function(){r.path("/cart")},e.submitOrder=function(){r.path("/order-confirmation/TESTING")}}function internalActtsController(t,o,r,e){var n=this,l=e;t.info("in the internal controller"),n.submit=function(){console.log("submitting"),l.post("/api/shiftEarnings",{test:"test"}).then(function(t){console.log("got this response",t)})}}function landingController(t,o,r,e,n){o.info("in the landing controller")}function locationsController(t,o,r){t.info("in the locations controller")}function loginController(t,o,r,e){var n=this,l=e;t.info("in the login controller"),n.email="",n.password="",n.login=function(){l.post("/api/authenticate",{email:n.email,pass:n.password},"").then(function(o){var e="#/teamMember/"+o;t.info("got this token back",e),r.path("/")})}}function mainController(t,o,r,e){t.teamMember=!1,o.info("in the main controller")}function orderConfirmationController(t,o,r,e){o.info("in the order confirmation controller")}function productGettingController(t,o,r){var e=this;e.product=o.item,t.info("in the product getting controller",e.product),e.order=function(){r.path("/cart")}}function ahHeader(){function t(t,o,r,e){}function o(t,o,r){var e=this;o.info("in the header directive"),e.navbnt=function(t){o.info("clicked",t),"menu"!=t&&r.path("/"+t)}}t.$inject=["scope","el","attr","ctrl"];var r={restrict:"AECM",templateUrl:"views/directives/ah.header.directive.htm",replace:!0,scope:{},link:t,controller:o,controllerAs:"vm",bindToController:!0};return o.$inject=["$scope","$log","$location"],r}function ahFooter(){function t(t,o,r,e){}function o(t,o){o.info("in the header directive")}t.$inject=["scope","el","attr","ctrl"];var r={restrict:"AECM",templateUrl:"views/directives/ah.footer.directive.htm",replace:!0,scope:{},link:t,controller:o,controllerAs:"vm",bindToController:!0};return o.$inject=["$scope","$log"],r}function cartNavigation(){function t(t,o,r,e){}function o(t,o,r){var e=this;o.info("in the cart navigation directive"),e.shopMore=function(){r.path("/all-products")},e.checkout=function(){r.path("/checkout")}}t.$inject=["scope","el","attr","ctrl"];var r={restrict:"AECM",templateUrl:"views/directives/cartNavigation.directive.htm",replace:!0,scope:{},link:t,controller:o,controllerAs:"vm",bindToController:!0};return o.$inject=["$scope","$log","$location"],r}function cartSummary(){function t(t,o,r,e){}function o(t,o){o.info("in the cart summary directive")}t.$inject=["scope","el","attr","ctrl"];var r={restrict:"AECM",templateUrl:"views/directives/cartSummary.directive.htm",replace:!0,scope:{noItems:"=",subtotal:"="},link:t,controller:o,controllerAs:"vm",bindToController:!0};return o.$inject=["$scope","$log"],r}function couponSubmission(){function t(t,o,r,e){}function o(t,o){o.info("in the coupon-submission directive")}t.$inject=["scope","el","attr","ctrl"];var r={restrict:"AECM",templateUrl:"views/directives/couponSubmission.directive.htm",replace:!0,scope:{},link:t,controller:o,controllerAs:"vm",bindToController:!0};return o.$inject=["$scope","$log"],r}function createNewAccount(){function t(t,o,r,e){}function o(t,o,r){o.info("in the create new account directive")}t.$inject=["scope","el","attr","ctrl"];var r={restrict:"AECM",templateUrl:"views/directives/createNewAccount.directive.htm",replace:!0,scope:{},link:t,controller:o,controllerAs:"vm",bindToController:!0};return o.$inject=["$scope","$log","$location"],r}function featuredProducts(){function t(t,o,r,e){}function o(t,o,r){var e=this;o.info("in the featuredProductsController directive"),e.mrPrdctsBtn=function(){r.path("/all-products")},e.productSelectionBtn=function(t){o.info("hit the product selection button"),r.path("/product/"+t)}}t.$inject=["scope","el","attr","ctrl"];var r={restrict:"AECM",templateUrl:"views/directives/featuredProducts.directive.htm",replace:!0,scope:{},link:t,controller:o,controllerAs:"vm",bindToController:!0};return o.$inject=["$scope","$log","$location"],r}function fullProductProfile(){function t(t,o,r,e){}function o(t,o,r){var e=this;o.info("in the fullProductProfileController directive",e.product),e.order=function(){r.path("/getting-the-product/"+e.product)}}t.$inject=["scope","el","attr","ctrl"];var r={restrict:"AECM",templateUrl:"views/directives/fullProductProfile.directive.htm",replace:!0,scope:{product:"="},link:t,controller:o,controllerAs:"vm",bindToController:!0};return o.$inject=["$scope","$log","$location"],r}function heroBanner(){function t(t,o,r,e){}function o(t,o){o.info("in the hero banner directive")}t.$inject=["scope","el","attr","ctrl"];var r={restrict:"AECM",templateUrl:"views/directives/heroBanner.directive.htm",replace:!0,scope:{},link:t,controller:o,controllerAs:"vm",bindToController:!0};return o.$inject=["$scope","$log"],r}function passwordReset(){function t(t,o,r,e){}function o(t,o,r){var e=this;o.info("in the passwordReset directive"),e.email="",e.back=function(){r.path("/login")},e.submit=function(){o.info("submitting email",e.email)}}t.$inject=["scope","el","attr","ctrl"];var r={restrict:"AECM",templateUrl:"views/directives/passwordReset.directive.htm",replace:!0,scope:{},link:t,controller:o,controllerAs:"vm",bindToController:!0};return o.$inject=["$scope","$log","$location"],r}function pickupOrDelivery(){function t(t,o,r,e){}function o(t,o){var r=this;o.info("in the pickup-or-delivery directive",r.method,r.details)}t.$inject=["scope","el","attr","ctrl"];var r={restrict:"AECM",templateUrl:"views/directives/pickupOrDelivery.directive.htm",replace:!0,scope:{method:"=",details:"="},link:t,controller:o,controllerAs:"vm",bindToController:!0};return o.$inject=["$scope","$log"],r}function primaryContent(){function t(t,o,r,e){}function o(t,o){o.info("in the header directive")}t.$inject=["scope","el","attr","ctrl"];var r={restrict:"AECM",templateUrl:"views/directives/primaryContent.directive.htm",replace:!0,scope:{},link:t,controller:o,controllerAs:"vm",bindToController:!0};return o.$inject=["$scope","$log"],r}function userDashboard(){function t(t,o,r,e){}function o(t,o,r){o.info("in the userDashboard directive")}t.$inject=["scope","el","attr","ctrl"];var r={restrict:"AECM",templateUrl:"views/directives/userDashboard.directive.htm",replace:!0,scope:{},link:t,controller:o,controllerAs:"vm",bindToController:!0};return o.$inject=["$scope","$log","$location"],r}function dataServices(t,o){return{post:function(t,r,e){return new Promise(function(n,l){o.post(t,r,e).then(function(t){n(t.data)},function(t){l(t)})})}}}function shoppingCart(t,o){return{isEmpty:!0,aquisitionMethod:void 0,noOfItems:0,subtotal:1250,aquisitionDetails:{},items:[],addItem:function(){}}}function config(t){t.when("/",{templateUrl:"views/landingPage.htm",controller:"landingController",controllerAs:"vm"}).when("/all-products",{templateUrl:"views/allProductsPage.htm",controller:"allProductsController",controllerAs:"vm"}).when("/product/:itemId",{templateUrl:"views/aProductPage.htm",controller:"aProductController",controllerAs:"vm"}).when("/getting-the-product/:itemId",{templateUrl:"views/productGettingPage.htm",controller:"productGettingController",controllerAs:"vm"}).when("/locations",{templateUrl:"views/locationsPage.htm",controller:"locationsController",controllerAs:"vm"}).when("/login",{templateUrl:"views/loginPage.htm",controller:"loginController",controllerAs:"vm"}).when("/cart",{templateUrl:"views/cartPage.htm",controller:"cartController",controllerAs:"vm"}).when("/checkout",{templateUrl:"views/checkoutPage.htm",controller:"checkoutController",controllerAs:"vm"}).when("/order-confirmation/:confId",{templateUrl:"views/orderConfirmationPage.htm",controller:"orderConfirmationController",controllerAs:"vm"}).when("/MyAccount/:param",{templateUrl:"views/accountsPage.htm",controller:"accountsController",controllerAs:"vm"}).when("/teamMember/:param",{templateUrl:"views/internalActtsPage.htm",controller:"internalActtsController",controllerAs:"vm",resolve:{authentication:authentication}})}function authentication(){console.log("authenticating")}config.$inject=["$routeProvider"];var ahNuts=angular.module("ahNuts",["ngRoute"]);angular.module("ahNuts").controller("aProductController",aProductController),aProductController.$inject=["$log","$routeParams","$location"],angular.module("ahNuts").controller("accountsController",accountsController),accountsController.$inject=["$log","$routeParams","$location"],angular.module("ahNuts").controller("allProductsController",allProductsController),allProductsController.$inject=["$log","$routeParams","$location"],angular.module("ahNuts").controller("cartController",cartController),cartController.$inject=["$log","$routeParams","$location","shoppingCart"],angular.module("ahNuts").controller("checkoutController",checkoutController),checkoutController.$inject=["$log","$routeParams","$location"],angular.module("ahNuts").controller("internalActtsController",internalActtsController),internalActtsController.$inject=["$log","$routeParams","$location","dataServices"],angular.module("ahNuts").controller("landingController",landingController),landingController.$inject=["$scope","$log","$routeParams","$location","dataServices"],angular.module("ahNuts").controller("locationsController",locationsController),locationsController.$inject=["$log","$routeParams","$location"],angular.module("ahNuts").controller("loginController",loginController),loginController.$inject=["$log","$routeParams","$location","dataServices"],angular.module("ahNuts").controller("mainController",mainController),mainController.$inject=["$scope","$log","$routeParams","$location"],angular.module("ahNuts").controller("orderConfirmationController",orderConfirmationController),orderConfirmationController.$inject=["$scope","$log","$routeParams","$location"],angular.module("ahNuts").controller("productGettingController",productGettingController),productGettingController.$inject=["$log","$routeParams","$location"],angular.module("ahNuts").directive("ahHeader",ahHeader),angular.module("ahNuts").directive("ahFooter",ahFooter),angular.module("ahNuts").directive("cartNavigation",cartNavigation),angular.module("ahNuts").directive("cartSummary",cartSummary),angular.module("ahNuts").directive("couponSubmission",couponSubmission),angular.module("ahNuts").directive("createNewAccount",createNewAccount),angular.module("ahNuts").directive("featuredProducts",featuredProducts),angular.module("ahNuts").directive("fullProductProfile",fullProductProfile),angular.module("ahNuts").directive("heroBanner",heroBanner),angular.module("ahNuts").directive("passwordReset",passwordReset),angular.module("ahNuts").directive("pickupOrDelivery",pickupOrDelivery),angular.module("ahNuts").directive("primaryContent",primaryContent),angular.module("ahNuts").directive("userDashboard",userDashboard),angular.module("ahNuts").factory("dataServices",dataServices),dataServices.$inject=["$log","$http"],angular.module("ahNuts").factory("shoppingCart",shoppingCart),shoppingCart.$inject=["$log","$http"],angular.module("ahNuts").config(config);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
