function aProductController(t,e,o,r){var n=this;n.product=r,n.returnHome=function(){o.path("/")}}function accountsController(t,e,o){var r=this;r.registeredUser=!1,r.forgotPassword=!1,t.info("in the accounts controller"),function(t){"CreateProfile"==t||"ForgotPassword"==t?"ForgotPassword"==t&&(r.forgotPassword=!0):r.registeredUser=!0}(e.param)}function allProductsController(t,e,o,r){var n=this;n.allProducts=r,void 0!=e.filter&&(n.selectedProducts=e.filter),n.selectAProuct=function(t){var e="/product/"+t;o.path(e).search("filter",null)}}function cartController(t,e,o,r){var n=this;n.cart=r,t.info("in the cart controller",n.cart),n.cart.calcTotalCost()}function checkoutController(t,e,o,r,n){var i=this;i.cart=n,i.squareCreds=r,t.info("in the checkout controller"),i.backBtn=function(){o.path("/cart")},i.submitOrder=function(){o.path("/order-confirmation/TESTING")}}function internalActtsController(t,e,o,r){var n=this,i=r;t.info("in the internal controller"),n.submit=function(){console.log("submitting"),i.post("/api/shiftEarnings",{test:"test"}).then(function(t){console.log("got this response",t)})}}function landingController(t,e,o,r,n){}function locationsController(t,e,o){t.info("in the locations controller")}function loginController(t,e,o,r){var n=this,i=r;t.info("in the login controller"),n.email="",n.password="",n.login=function(){i.post("/api/authenticate",{email:n.email,pass:n.password},"").then(function(e){var r="#/teamMember/"+e;t.info("got this token back",r),o.path("/")})}}function mainController(t,e,o,r){t.teamMember=!1}function orderConfirmationController(t,e,o,r){e.info("in the order confirmation controller")}function productGettingController(t,e,o,r,n,i){var c=this;c.product=e.item,c.cart=r,c.usps=n,c.usps._uspsUsername=i,c.order=function(){c.cart.updateAquisitionMethod(),c.cart.aquisitionMethod="delivery",o.path("/cart")},c.cityStateLookup=function(){n.cityStateLookup(c.cart.aquisitionDetails.deliveryLocation.zip).then(function(t){c.cart.aquisitionDetails.deliveryLocation.city=t.city,c.cart.aquisitionDetails.deliveryLocation.state=t.state}).catch(function(t){console.log("error:",t)})}}function registerAcctController(t,e,o){console.log("in the registerAcctController ")}function ahHeader(){function t(t,e,o,r){}function e(t,e,o,r){var n=this;n.cart=r,n.navbnt=function(t){e.info("clicked",t),"menu"!=t&&o.path("/"+t)}}t.$inject=["scope","el","attr","ctrl"];var o={restrict:"AECM",templateUrl:"views/directives/ah.header.directive.htm",replace:!0,scope:{},link:t,controller:e,controllerAs:"vm",bindToController:!0};return e.$inject=["$scope","$log","$location","shoppingCart"],o}function ahFooter(){function t(t,e,o,r){}function e(t,e){}t.$inject=["scope","el","attr","ctrl"];var o={restrict:"AECM",templateUrl:"views/directives/ah.footer.directive.htm",replace:!0,scope:{},link:t,controller:e,controllerAs:"vm",bindToController:!0};return e.$inject=["$scope","$log"],o}function cartItemsList(){function t(t,e,o,r){}function e(t,e,o){var r=this,n=o;e.info("in the cartItemsListController directive",r.cartItems),r.removeItem=function(t){console.log("removing itemId",t),n.removeItem(t)},r.updateQty=function(t,e){n.updateItemQty(t,e)}}t.$inject=["scope","el","attr","ctrl"];var o={restrict:"AECM",templateUrl:"views/directives/cartItemsList.directive.htm",replace:!0,scope:{cartItems:"="},link:t,controller:e,controllerAs:"vm",bindToController:!0};return e.$inject=["$scope","$log","shoppingCart"],o}function cartNavigation(){function t(t,e,o,r){}function e(t,e,o){var r=this;e.info("in the cart navigation directive"),r.shopMore=function(){o.path("/all-products")},r.checkout=function(){o.path("/checkout")}}t.$inject=["scope","el","attr","ctrl"];var o={restrict:"AECM",templateUrl:"views/directives/cartNavigation.directive.htm",replace:!0,scope:{},link:t,controller:e,controllerAs:"vm",bindToController:!0};return e.$inject=["$scope","$log","$location"],o}function cartSummary(){function t(t,e,o,r){}function e(t,e){e.info("in the cart summary directive")}t.$inject=["scope","el","attr","ctrl"];var o={restrict:"AECM",templateUrl:"views/directives/cartSummary.directive.htm",replace:!0,scope:{noItems:"=",subtotal:"="},link:t,controller:e,controllerAs:"vm",bindToController:!0};return e.$inject=["$scope","$log"],o}function checkoutBilling(){function t(t,e,o,r){}function e(t,e){var o=this;o.payDet={name:{first:"",last:""},street1:"",street2:"",street3:"",city:"",state:"",zip:"",phone:"",po:"",email:""},e.info("in the checkoutBilling directive",o.aquDet,o.payDet),o.copyDelAdd=function(){o.payDet.name.first=o.aquDet.deliveryLocation.receiver.first,o.payDet.name.last=o.aquDet.deliveryLocation.receiver.last,o.payDet.street1=o.aquDet.deliveryLocation.street1,o.payDet.street2=o.aquDet.deliveryLocation.street2,o.payDet.street3=o.aquDet.deliveryLocation.street3,o.payDet.city=o.aquDet.deliveryLocation.city,o.payDet.state=o.aquDet.deliveryLocation.state,o.payDet.zip=o.aquDet.deliveryLocation.zip}}t.$inject=["scope","el","attr","ctrl"];var o={restrict:"AECM",templateUrl:"views/directives/checkoutBilling.directive.htm",replace:!0,scope:{aquDet:"=",payDet:"="},link:t,controller:e,controllerAs:"vm",bindToController:!0};return e.$inject=["$scope","$log"],o}function checkoutFollowup(){function t(t,e,o,r){}function e(t,e){e.info("in the checkoutFollowupController directive")}t.$inject=["scope","el","attr","ctrl"];var o={restrict:"AECM",templateUrl:"views/directives/checkoutFollowup.directive.htm",replace:!0,scope:{},link:t,controller:e,controllerAs:"vm",bindToController:!0};return e.$inject=["$scope","$log"],o}function checkoutPayment(){function t(t,e,o,r){}function e(t,e,o){var r=this;r.data=o;e.info("in the checkoutPayment directive");var n=new SqPaymentForm({applicationId:"REPLACE_ME",locationId:"REPLACE_ME",inputClass:"sq-input",inputStyles:[{fontSize:"15px"}],cardNumber:{elementId:"sq-card-number",placeholder:"•••• •••• •••• ••••"},cvv:{elementId:"sq-cvv",placeholder:"CVV"},expirationDate:{elementId:"sq-expiration-date",placeholder:"MM/YY"},postalCode:{elementId:"sq-postal-code"},applePay:{elementId:"sq-apple-pay"},callbacks:{methodsSupported:function(t){!0===t.applePay&&(document.getElementById("sq-apple-pay").style.display="inline-block")},createPaymentRequest:function(){return{requestShippingAddress:!0,currencyCode:"USD",countryCode:"US",total:{label:"{{ MERCHANT NAME }}",amount:"{{TOTAL AMOUNT}}",pending:!1},lineItems:[{label:"Subtotal",amount:"{{SUBTOTAL AMOUNT}}",pending:!1},{label:"Shipping",amount:"{{SHIPPING AMOUNT}}",pending:!0},{label:"Tax",amount:"{{TAX AMOUNT}}",pending:!1}]}},cardNonceResponseReceived:function(t,e,o){if(t)return console.log("Encountered errors:"),void t.forEach(function(t){console.log("  "+t.message)});document.getElementById("card-nonce").value=e,document.getElementById("nonce-form").submit(),r.data.post("/process-card",{nonce:e})},unsupportedBrowserDetected:function(){},inputEventReceived:function(t){t.eventType},paymentFormLoaded:function(){}}});r.requestCardNonce=function(t){console.log("requestion card Nonce"),t.preventDefault(),n.requestCardNonce()},n.build()}t.$inject=["scope","el","attr","ctrl"];var o={restrict:"AECM",templateUrl:"views/directives/checkoutPayment.directive.htm",replace:!0,scope:{squareCreds:"="},link:t,controller:e,controllerAs:"vm",bindToController:!0};return e.$inject=["$scope","$log","dataServices"],o}function couponSubmission(){function t(t,e,o,r){}function e(t,e){e.info("in the coupon-submission directive")}t.$inject=["scope","el","attr","ctrl"];var o={restrict:"AECM",templateUrl:"views/directives/couponSubmission.directive.htm",replace:!0,scope:{},link:t,controller:e,controllerAs:"vm",bindToController:!0};return e.$inject=["$scope","$log"],o}function createNewAccount(){function t(t,e,o,r){}function e(t,e,o){e.info("in the create new account directive")}t.$inject=["scope","el","attr","ctrl"];var o={restrict:"AECM",templateUrl:"views/directives/createNewAccount.directive.htm",replace:!0,scope:{},link:t,controller:e,controllerAs:"vm",bindToController:!0};return e.$inject=["$scope","$log","$location"],o}function defineDeliveryAddress(){function t(t,e,o,r){}function e(t,e){}t.$inject=["scope","el","attr","ctrl"];var o={restrict:"AECM",templateUrl:"views/directives/defineDeliveryAddress.directive.htm",replace:!0,scope:{deliverTo:"="},link:t,controller:e,controllerAs:"vm",bindToController:!0};return e.$inject=["$scope","$log"],o}function deliveryDetails(){function t(t,e,o,r){}function e(t,e,o){var r=this;e.info("in the deliveryDetails directive",r.deliverTo),r.changeDetails=function(){o.path("/getting-the-product/10")}}t.$inject=["scope","el","attr","ctrl"];var o={restrict:"AECM",templateUrl:"views/directives/deliveryDetails.directive.htm",replace:!0,scope:{deliverTo:"="},link:t,controller:e,controllerAs:"vm",bindToController:!0};return e.$inject=["$scope","$log","$location"],o}function featuredProducts(){function t(t,e,o,r){}function e(t,e,o){var r=this;r.mrPrdctsBtn=function(){o.path("/all-products")},r.productSelectionBtn=function(t){o.path("/all-products").search("filter",t)}}t.$inject=["scope","el","attr","ctrl"];var o={restrict:"AECM",templateUrl:"views/directives/featuredProducts.directive.htm",replace:!0,scope:{},link:t,controller:e,controllerAs:"vm",bindToController:!0};return e.$inject=["$scope","$log","$location"],o}function fedexOptions(){function t(t,e,o,r){}function e(t,e){}t.$inject=["scope","el","attr","ctrl"];var o={restrict:"AECM",templateUrl:"views/directives/fedexOptions.directive.htm",replace:!0,scope:{},link:t,controller:e,controllerAs:"vm",bindToController:!0};return e.$inject=["$scope","$log"],o}function fullProductProfile(){function t(t,e,o,r){}function e(t,e,o,r){var n=this;n.cart=r,n.itemSelections=n.product.sizes,n.addToCart=function(t){n.itemSelections.forEach(function(t){t.qty>0&&n.cart.addItem(t)}),n.cart.acqMethIsDefined()?o.path("/cart"):o.path("/getting-the-product/10")}}t.$inject=["scope","el","attr","ctrl"];var o={restrict:"AECM",templateUrl:"views/directives/fullProductProfile.directive.htm",replace:!0,scope:{product:"="},link:t,controller:e,controllerAs:"vm",bindToController:!0};return e.$inject=["$scope","$log","$location","shoppingCart"],o}function heroBanner(){function t(t,e,o,r){}function e(t,e){}t.$inject=["scope","el","attr","ctrl"];var o={restrict:"AECM",templateUrl:"views/directives/heroBanner.directive.htm",replace:!0,scope:{},link:t,controller:e,controllerAs:"vm",bindToController:!0};return e.$inject=["$scope","$log"],o}function passwordReset(){function t(t,e,o,r){}function e(t,e,o){var r=this;e.info("in the passwordReset directive"),r.email="",r.back=function(){o.path("/login")},r.submit=function(){e.info("submitting email",r.email)}}t.$inject=["scope","el","attr","ctrl"];var o={restrict:"AECM",templateUrl:"views/directives/passwordReset.directive.htm",replace:!0,scope:{},link:t,controller:e,controllerAs:"vm",bindToController:!0};return e.$inject=["$scope","$log","$location"],o}function pickupOrDelivery(){function t(t,e,o,r){}function e(t,e){var o=this;e.info("in the pickup-or-delivery directive",o.method,o.details)}t.$inject=["scope","el","attr","ctrl"];var o={restrict:"AECM",templateUrl:"views/directives/pickupOrDelivery.directive.htm",replace:!0,scope:{method:"=",details:"="},link:t,controller:e,controllerAs:"vm",bindToController:!0};return e.$inject=["$scope","$log"],o}function primaryContent(){function t(t,e,o,r){}function e(t,e){e.info("in the header directive")}t.$inject=["scope","el","attr","ctrl"];var o={restrict:"AECM",templateUrl:"views/directives/primaryContent.directive.htm",replace:!0,scope:{},link:t,controller:e,controllerAs:"vm",bindToController:!0};return e.$inject=["$scope","$log"],o}function productSizePicker(){function t(t,e,o,r){}function e(t,e){}t.$inject=["scope","el","attr","ctrl"];var o={restrict:"AECM",templateUrl:"views/directives/productSizePicker.directive.htm",replace:!0,scope:{sizes:"="},link:t,controller:e,controllerAs:"vm",bindToController:!0};return e.$inject=["$scope","$log"],o}function prdctThmbnl(){function t(t,e,o,r){}function e(t,e){}t.$inject=["scope","el","attr","ctrl"];var o={restrict:"AECM",templateUrl:"views/directives/prdctThmbnl.directive.htm",replace:!0,scope:{product:"="},link:t,controller:e,controllerAs:"vm",bindToController:!0};return e.$inject=["$scope","$log"],o}function selectDeliveryMethod(){function t(t,e,o,r){}function e(t,e){}t.$inject=["scope","el","attr","ctrl"];var o={restrict:"AECM",templateUrl:"views/directives/selectDeliveryMethod.directive.htm",replace:!0,scope:{},link:t,controller:e,controllerAs:"vm",bindToController:!0};return e.$inject=["$scope","$log"],o}function selectPOrD(){function t(t,e,o,r){}function e(t,e){}t.$inject=["scope","el","attr","ctrl"];var o={restrict:"AECM",templateUrl:"views/directives/selectPOrD.directive.htm",replace:!0,scope:{},link:t,controller:e,controllerAs:"vm",bindToController:!0};return e.$inject=["$scope","$log"],o}function selectPickupLocation(){function t(t,e,o,r){}function e(t,e){}t.$inject=["scope","el","attr","ctrl"];var o={restrict:"AECM",templateUrl:"views/directives/selectPickupLocation.directive.htm",replace:!0,scope:{},link:t,controller:e,controllerAs:"vm",bindToController:!0};return e.$inject=["$scope","$log"],o}function sizeQtySelector(){function t(t,e,o,r){}function e(t,e){var o=this;o.incriment=function(){o.size.qty++},o.decriment=function(){o.size.qty>=1&&o.size.qty--}}t.$inject=["scope","el","attr","ctrl"];var o={restrict:"AECM",templateUrl:"views/directives/sizeQtySelector.directive.htm",replace:!0,scope:{size:"="},link:t,controller:e,controllerAs:"vm",bindToController:!0};return e.$inject=["$scope","$log"],o}function toZipOnDate(){function t(t,e,o,r){t.$watch("form.zipcode.$valid",function(e,o){console.log("$valid",e),e&&""!=t.zipcode?t.completed=!0:t.completed=!1})}function e(t,e,o){var r=this;r.zipcodeFinder=function(){alert("finding zipcode")},r.submitZip=function(){},r.checkzipcode=function(){o.cityStateLookup(r.goingTo.zip).then(function(e){r.goingTo.city=e.city,r.goingTo.state=e.state,t.$apply()}).catch(function(t){})}}t.$inject=["scope","el","attr","ctrl"];var o={restrict:"AECM",templateUrl:"views/directives/toZipOnDate.directive.htm",replace:!0,scope:{goingTo:"=",vipIdentified:"="},link:t,controller:e,controllerAs:"vm",bindToController:!0};return e.$inject=["$scope","$log","uspsServices"],o}function upsOptions(){function t(t,e,o,r){}function e(t,e){}t.$inject=["scope","el","attr","ctrl"];var o={restrict:"AECM",templateUrl:"views/directives/upsOptions.directive.htm",replace:!0,scope:{},link:t,controller:e,controllerAs:"vm",bindToController:!0};return e.$inject=["$scope","$log"],o}function userDashboard(){function t(t,e,o,r){}function e(t,e,o){e.info("in the userDashboard directive")}t.$inject=["scope","el","attr","ctrl"];var o={restrict:"AECM",templateUrl:"views/directives/userDashboard.directive.htm",replace:!0,scope:{},link:t,controller:e,controllerAs:"vm",bindToController:!0};return e.$inject=["$scope","$log","$location"],o}function uspsOptions(){function t(t,e,o,r){}function e(t,e){}t.$inject=["scope","el","attr","ctrl"];var o={restrict:"AECM",templateUrl:"views/directives/uspsOptions.directive.htm",replace:!0,scope:{},link:t,controller:e,controllerAs:"vm",bindToController:!0};return e.$inject=["$scope","$log"],o}function dataServices(t,e){return{get:function(t,o){return new Promise(function(r,n){e.get(t,o).then(function(t){r(t.data)},function(t){n(t)})})},post:function(t,o,r){return new Promise(function(n,i){e.post(t,o,r).then(function(t){n(t.data)},function(t){i(t)})})}}}function shoppingCart(t,e,o){function r(t){var e={};return Object.keys(t).forEach(function(o){e[o]=t[o]}),console.log("adding this new item",e),e}function n(t){var e=this,o=0;return console.log("allItems",t),Object.keys(t).forEach(function(e){o+=t[e].qty}),console.log("_countNoItems",o),0==o&&(e.isEmpty=!0),o}function i(t){var e=0;return Object.keys(t).forEach(function(o){e+=t[o].qty*t[o].price}),e}return{isEmpty:!0,orderNumber:void 0,aquisitionMethod:void 0,noOfItems:0,subtotal:0,shippingPrice:0,discounts:0,totalCost:0,aquisitionDetails:{delZipIdentified:!1,delDateIdentified:!1,shippedOrPUSelected:!1,willShippp:!1,willPU:!1,puLocSelected:!1,delMthSelected:!1,pickupLocation:{},deliveryLocation:{receiver:{first:"",last:""},street1:"",street2:"",street3:"",city:"",state:"",zip:""},deliveryMethod:{}},paymentDetails:{},items:{},_saveToBrowser:function(){var t=this,e={isEmpty:t.isEmpty,orderNumber:t.orderNumber,aquisitionMethod:t.aquisitionMethod,noOfItems:t.noOfItems,subtotal:t.subtotal,shippingPrice:t.shippingPrice,discounts:t.discounts,totalCost:t.totalCost,aquisitionDetails:t.aquisitionDetails,items:t.items};o.sessionStorage.setItem("ah-nuts-cart",JSON.stringify(e))},_getCart:function(){return o.sessionStorage["ah-nuts-cart"]},_removeCart:function(){o.sessionStorage.removeItem("ah-nuts-cart")},_addNewItem:r,_countNoItems:n,_calcSubtotal:i,init:function(){var t=this;if(null!=o.sessionStorage.getItem("ah-nuts-cart")){var e=JSON.parse(o.sessionStorage.getItem("ah-nuts-cart"));t.isEmpty=e.isEmpty,t.orderNumber=e.orderNumber,t.aquisitionMethod=e.aquisitionMethod,t.noOfItems=e.noOfItems,t.subtotal=e.subtotal,t.shippingPrice=e.shippingPrice,t.discounts=e.discounts,t.totalCost=e.totalCost,t.aquisitionDetails=e.aquisitionDetails,t.items=e.items}console.log(t)},addItem:function(t){var e=this,o=t.code;return e.isEmpty=!1,void 0==e.items[o]?(console.log("adding a new item"),e.items[o]=r(t),e.noOfItems=n(e.items),e.subtotal=i(e.items)):console.log("updating a new qty"),e._saveToBrowser(),!0},removeItem:function(t){var e=this;Object.keys(e.items).forEach(function(o){console.log(o,t),o==t&&delete e.items[o]}),e.noOfItems=e._countNoItems(e.items),e.subtotal=e._calcSubtotal(e.items),e.calcTotalCost(),e._saveToBrowser()},updateAquisitionMethod:function(){this._saveToBrowser()},calcTotalCost:function(){var t=this;t.totalCost=t.subtotal+t.shippingPrice+t.discounts},updateItemQty:function(t,e){var o=this;if(0==parseInt(e))return o.removeItem(t),0;o.items[t].qty=parseInt(e),o.noOfItems=o._countNoItems(o.items),o.subtotal=o._calcSubtotal(o.items),o.calcTotalCost(),o._saveToBrowser()},acqMethIsDefined:function(){return void 0!=this.aquisitionMethod}}}function testObject(t){return{image:void 0,code:1203,rating:void 0,name:"Specialty Cones",sizes:[{code:1203001,title:"Impressive",oz:16,price:1800},{code:1203002,title:"Average",oz:8,price:1300},{code:1203003,title:"Small",oz:4,price:700}],description:"The most amazing pecans you've ever taste",ingredients:["Pecans","Sugar","Vanilla","Salt"]}}function userAuthentication(t,e){}function uspsServices(t,e){return{_uspsUsername:"",_parseCityStateResponse:function(t){console.log(t,typeof t);var e=t.split("<City>")[1].split("</City>"),o=t.split("<State>")[1].split("</State>");return{city:e[0],state:o[0]}},cityStateLookup:function(t){var o=this,r='http://production.shippingapis.com/ShippingAPI.dll?API= CityStateLookup&XML=<CityStateLookupRequest%20USERID="'+o._uspsUsername+'"><ZipCode ID= "0"><Zip5>'+t+"</Zip5></ZipCode></CityStateLookupRequest>";return console.log(t),new Promise(function(t,n){e.get(r,"").then(function(e){var r=o._parseCityStateResponse(e.data);console.log(r),t(r)},function(t){n(t)})})}}}function config(t){t.when("/",{templateUrl:"views/landingPage.htm",controller:"landingController",controllerAs:"vm"}).when("/all-products",{templateUrl:"views/allProductsPage.htm",controller:"allProductsController",controllerAs:"vm",resolve:{productList:productList}}).when("/product/:prdctId",{templateUrl:"views/aProductPage.htm",controller:"aProductController",controllerAs:"vm",resolve:{aProduct:aProduct}}).when("/getting-the-product/:itemId",{templateUrl:"views/productGettingPage.htm",controller:"productGettingController",controllerAs:"vm",resolve:{uspsUsername:uspsUsername}}).when("/locations",{templateUrl:"views/locationsPage.htm",controller:"locationsController",controllerAs:"vm"}).when("/login",{templateUrl:"views/loginPage.htm",controller:"loginController",controllerAs:"vm"}).when("/cart",{templateUrl:"views/cartPage.htm",controller:"cartController",controllerAs:"vm"}).when("/checkout",{templateUrl:"views/checkoutPage.htm",controller:"checkoutController",controllerAs:"vm",resolve:{squareCreds:squareCreds}}).when("/order-confirmation/:confId",{templateUrl:"views/orderConfirmationPage.htm",controller:"orderConfirmationController",controllerAs:"vm"}).when("/registerUser",{templateUrl:"views/registrationPage.htm",controller:"registerAcctController",controllerAs:"vm"}).when("/MyAccount/:param",{templateUrl:"views/accountsPage.htm",controller:"accountsController",controllerAs:"vm"}).when("/teamMember/:param",{templateUrl:"views/internalActtsPage.htm",controller:"internalActtsController",controllerAs:"vm",resolve:{authentication:authentication}})}function authentication(){console.log("authenticating")}function squareCreds(t){var e=t;return console.log("getting square creds"),new Promise(function(t,o){e.post("/api/square-creds",{key:"owine91n-sn#bsinwi#k"}).then(function(e){console.log("got this",e),t(e)}).catch(function(e){t(e)})})}function productList(t,e){var o=t,r="/api/productlist";return void 0!=e.current.params&&(r+="?filter="+e.current.params.filter),new Promise(function(t,e){o.get(r).then(function(e){t(e)}).catch(function(t){e(t)})})}function aProduct(t,e){var o=t,r="/api/productlist?select="+e.current.params.prdctId;return console.log("path",r),new Promise(function(t,e){o.get(r).then(function(e){t(e)}).catch(function(t){e(t)})})}function uspsUsername(t){var e=t;return new Promise(function(t,o){e.get("/api/secrets/usps-username").then(function(e){console.log("got this secret",e),t(e)}).catch(function(t){o(t)})})}config.$inject=["$routeProvider"],productList.$inject=["dataServices","$route"],aProduct.$inject=["dataServices","$route"],uspsUsername.$inject=["dataServices"],squareCreds.$inject=["dataServices"];var ahNuts=angular.module("ahNuts",["ngRoute"]);angular.module("ahNuts").run(["shoppingCart",function(t){t.init()}]),angular.module("ahNuts").controller("aProductController",aProductController),aProductController.$inject=["$log","$routeParams","$location","aProduct"],angular.module("ahNuts").controller("accountsController",accountsController),accountsController.$inject=["$log","$routeParams","$location"],angular.module("ahNuts").controller("allProductsController",allProductsController),allProductsController.$inject=["$log","$routeParams","$location","productList"],angular.module("ahNuts").controller("cartController",cartController),cartController.$inject=["$log","$routeParams","$location","shoppingCart"],angular.module("ahNuts").controller("checkoutController",checkoutController),checkoutController.$inject=["$log","$routeParams","$location","squareCreds","shoppingCart"],angular.module("ahNuts").controller("internalActtsController",internalActtsController),internalActtsController.$inject=["$log","$routeParams","$location","dataServices"],angular.module("ahNuts").controller("landingController",landingController),landingController.$inject=["$scope","$log","$routeParams","$location","dataServices"],angular.module("ahNuts").controller("locationsController",locationsController),locationsController.$inject=["$log","$routeParams","$location"],angular.module("ahNuts").controller("loginController",loginController),loginController.$inject=["$log","$routeParams","$location","dataServices"],angular.module("ahNuts").controller("mainController",mainController),mainController.$inject=["$scope","$log","$routeParams","$location"],angular.module("ahNuts").controller("orderConfirmationController",orderConfirmationController),orderConfirmationController.$inject=["$scope","$log","$routeParams","$location"],angular.module("ahNuts").controller("productGettingController",productGettingController),productGettingController.$inject=["$log","$routeParams","$location","shoppingCart","uspsServices","uspsUsername"],angular.module("ahNuts").controller("registerAcctController",registerAcctController),registerAcctController.$inject=["$log","$routeParams","$location"],angular.module("ahNuts").directive("ahHeader",ahHeader),angular.module("ahNuts").directive("ahFooter",ahFooter),angular.module("ahNuts").directive("cartItemsList",cartItemsList),angular.module("ahNuts").directive("cartNavigation",cartNavigation),angular.module("ahNuts").directive("cartSummary",cartSummary),angular.module("ahNuts").directive("checkoutBilling",checkoutBilling),angular.module("ahNuts").directive("checkoutFollowup",checkoutFollowup),angular.module("ahNuts").directive("checkoutPayment",checkoutPayment),angular.module("ahNuts").directive("couponSubmission",couponSubmission),angular.module("ahNuts").directive("createNewAccount",createNewAccount),angular.module("ahNuts").directive("defineDeliveryAddress",defineDeliveryAddress),angular.module("ahNuts").directive("deliveryDetails",deliveryDetails),angular.module("ahNuts").directive("featuredProducts",featuredProducts),angular.module("ahNuts").directive("fedexOptions",fedexOptions),angular.module("ahNuts").directive("fullProductProfile",fullProductProfile),angular.module("ahNuts").directive("heroBanner",heroBanner),angular.module("ahNuts").directive("passwordReset",passwordReset),angular.module("ahNuts").directive("pickupOrDelivery",pickupOrDelivery),angular.module("ahNuts").directive("primaryContent",primaryContent),angular.module("ahNuts").directive("productSizePicker",productSizePicker),angular.module("ahNuts").directive("prdctThmbnl",prdctThmbnl),angular.module("ahNuts").directive("selectDeliveryMethod",selectDeliveryMethod),angular.module("ahNuts").directive("selectPOrD",selectPOrD),angular.module("ahNuts").directive("selectPickupLocation",selectPickupLocation),angular.module("ahNuts").directive("sizeQtySelector",sizeQtySelector),angular.module("ahNuts").directive("toZipOnDate",toZipOnDate),angular.module("ahNuts").directive("upsOptions",upsOptions),angular.module("ahNuts").directive("userDashboard",userDashboard),angular.module("ahNuts").directive("uspsOptions",uspsOptions),angular.module("ahNuts").factory("dataServices",dataServices),dataServices.$inject=["$log","$http"],angular.module("ahNuts").factory("shoppingCart",shoppingCart),shoppingCart.$inject=["$log","$http","$window"],angular.module("ahNuts").factory("testObject",testObject),testObject.$inject=["$log"],angular.module("ahNuts").service("userAuthentication",userAuthentication),userAuthentication.$inject=["$http","$window"],angular.module("ahNuts").factory("uspsServices",uspsServices),uspsServices.$inject=["$log","$http"],angular.module("ahNuts").config(config);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
