function aProductController(t,e,o){var r=this;r.productId=e.itemId,t.info("in the a Product controller",r.product),r.returnHome=function(){o.path("/")}}function accountsController(t,e,o){var r=this;r.registeredUser=!1,r.forgotPassword=!1,t.info("in the accounts controller"),function(t){"CreateProfile"==t||"ForgotPassword"==t?"ForgotPassword"==t&&(r.forgotPassword=!0):r.registeredUser=!0}(e.param)}function allProductsController(t,e,o){t.info("in the all Products controller")}function cartController(t,e,o){t.info("in the cart controller")}function checkoutController(t,e,o){t.info("in the checkout controller")}function internalActtsController(t,e,o,r){var n=this,l=r;t.info("in the internal controller"),n.submit=function(){console.log("submitting"),l.post("/api/shiftEarnings",{test:"test"}).then(function(t){console.log("got this response",t)})}}function landingController(t,e,o,r,n){e.info("in the landing controller")}function locationsController(t,e,o){t.info("in the locations controller")}function loginController(t,e,o,r){var n=this,l=r;t.info("in the login controller"),n.email="",n.password="",n.login=function(){l.post("/api/authenticate",{email:n.email,pass:n.password},"").then(function(e){var r="#/teamMember/"+e;t.info("got this token back",r),o.path("/")})}}function mainController(t,e,o,r){t.teamMember=!1,e.info("in the main controller")}function productGettingController(t,e,o){var r=this;r.product=e.item,t.info("in the product getting controller",r.product),r.order=function(){o.path("/cart")}}function ahHeader(){function t(t,e,o,r){}function e(t,e,o){var r=this;e.info("in the header directive"),r.navbnt=function(t){e.info("clicked",t),"menu"!=t&&o.path("/"+t)}}t.$inject=["scope","el","attr","ctrl"];var o={restrict:"AECM",templateUrl:"views/directives/ah.header.directive.htm",replace:!0,scope:{},link:t,controller:e,controllerAs:"vm",bindToController:!0};return e.$inject=["$scope","$log","$location"],o}function ahFooter(){function t(t,e,o,r){}function e(t,e){e.info("in the header directive")}t.$inject=["scope","el","attr","ctrl"];var o={restrict:"AECM",templateUrl:"views/directives/ah.footer.directive.htm",replace:!0,scope:{},link:t,controller:e,controllerAs:"vm",bindToController:!0};return e.$inject=["$scope","$log"],o}function cartNavigation(){function t(t,e,o,r){}function e(t,e,o){var r=this;e.info("in the cart navigation directive"),r.shopMore=function(){o.path("/all-products")},r.checkout=function(){o.path("/checkout")}}t.$inject=["scope","el","attr","ctrl"];var o={restrict:"AECM",templateUrl:"views/directives/cartNavigation.directive.htm",replace:!0,scope:{},link:t,controller:e,controllerAs:"vm",bindToController:!0};return e.$inject=["$scope","$log","$location"],o}function cartSummary(){function t(t,e,o,r){}function e(t,e){e.info("in the cart summary directive")}t.$inject=["scope","el","attr","ctrl"];var o={restrict:"AECM",templateUrl:"views/directives/cartSummary.directive.htm",replace:!0,scope:{},link:t,controller:e,controllerAs:"vm",bindToController:!0};return e.$inject=["$scope","$log"],o}function couponSubmission(){function t(t,e,o,r){}function e(t,e){e.info("in the coupon-submission directive")}t.$inject=["scope","el","attr","ctrl"];var o={restrict:"AECM",templateUrl:"views/directives/couponSubmission.directive.htm",replace:!0,scope:{},link:t,controller:e,controllerAs:"vm",bindToController:!0};return e.$inject=["$scope","$log"],o}function createNewAccount(){function t(t,e,o,r){}function e(t,e,o){e.info("in the create new account directive")}t.$inject=["scope","el","attr","ctrl"];var o={restrict:"AECM",templateUrl:"views/directives/createNewAccount.directive.htm",replace:!0,scope:{},link:t,controller:e,controllerAs:"vm",bindToController:!0};return e.$inject=["$scope","$log","$location"],o}function featuredProducts(){function t(t,e,o,r){}function e(t,e,o){var r=this;e.info("in the featuredProductsController directive"),r.mrPrdctsBtn=function(){o.path("/all-products")},r.productSelectionBtn=function(t){e.info("hit the product selection button"),o.path("/product/"+t)}}t.$inject=["scope","el","attr","ctrl"];var o={restrict:"AECM",templateUrl:"views/directives/featuredProducts.directive.htm",replace:!0,scope:{},link:t,controller:e,controllerAs:"vm",bindToController:!0};return e.$inject=["$scope","$log","$location"],o}function fullProductProfile(){function t(t,e,o,r){}function e(t,e,o){var r=this;e.info("in the fullProductProfileController directive",r.product),r.order=function(){o.path("/getting-the-product/"+r.product)}}t.$inject=["scope","el","attr","ctrl"];var o={restrict:"AECM",templateUrl:"views/directives/fullProductProfile.directive.htm",replace:!0,scope:{product:"="},link:t,controller:e,controllerAs:"vm",bindToController:!0};return e.$inject=["$scope","$log","$location"],o}function heroBanner(){function t(t,e,o,r){}function e(t,e){e.info("in the hero banner directive")}t.$inject=["scope","el","attr","ctrl"];var o={restrict:"AECM",templateUrl:"views/directives/heroBanner.directive.htm",replace:!0,scope:{},link:t,controller:e,controllerAs:"vm",bindToController:!0};return e.$inject=["$scope","$log"],o}function passwordReset(){function t(t,e,o,r){}function e(t,e,o){var r=this;e.info("in the passwordReset directive"),r.email="",r.back=function(){o.path("/login")},r.submit=function(){e.info("submitting email",r.email)}}t.$inject=["scope","el","attr","ctrl"];var o={restrict:"AECM",templateUrl:"views/directives/passwordReset.directive.htm",replace:!0,scope:{},link:t,controller:e,controllerAs:"vm",bindToController:!0};return e.$inject=["$scope","$log","$location"],o}function pickupOrDelivery(){function t(t,e,o,r){}function e(t,e){e.info("in the pickup-or-delivery directive")}t.$inject=["scope","el","attr","ctrl"];var o={restrict:"AECM",templateUrl:"views/directives/pickupOrDelivery.directive.htm",replace:!0,scope:{},link:t,controller:e,controllerAs:"vm",bindToController:!0};return e.$inject=["$scope","$log"],o}function primaryContent(){function t(t,e,o,r){}function e(t,e){e.info("in the header directive")}t.$inject=["scope","el","attr","ctrl"];var o={restrict:"AECM",templateUrl:"views/directives/primaryContent.directive.htm",replace:!0,scope:{},link:t,controller:e,controllerAs:"vm",bindToController:!0};return e.$inject=["$scope","$log"],o}function userDashboard(){function t(t,e,o,r){}function e(t,e,o){e.info("in the userDashboard directive")}t.$inject=["scope","el","attr","ctrl"];var o={restrict:"AECM",templateUrl:"views/directives/userDashboard.directive.htm",replace:!0,scope:{},link:t,controller:e,controllerAs:"vm",bindToController:!0};return e.$inject=["$scope","$log","$location"],o}function dataServices(t,e){return{post:function(t,o,r){return new Promise(function(n,l){e.post(t,o,r).then(function(t){n(t.data)},function(t){l(t)})})}}}function config(t){t.when("/",{templateUrl:"views/landingPage.htm",controller:"landingController",controllerAs:"vm"}).when("/all-products",{templateUrl:"views/allProductsPage.htm",controller:"allProductsController",controllerAs:"vm"}).when("/product/:itemId",{templateUrl:"views/aProductPage.htm",controller:"aProductController",controllerAs:"vm"}).when("/getting-the-product/:itemId",{templateUrl:"views/productGettingPage.htm",controller:"productGettingController",controllerAs:"vm"}).when("/locations",{templateUrl:"views/locationsPage.htm",controller:"locationsController",controllerAs:"vm"}).when("/login",{templateUrl:"views/loginPage.htm",controller:"loginController",controllerAs:"vm"}).when("/cart",{templateUrl:"views/cartPage.htm",controller:"cartController",controllerAs:"vm"}).when("/checkout",{templateUrl:"views/checkoutPage.htm",controller:"checkoutController",controllerAs:"vm"}).when("/MyAccount/:param",{templateUrl:"views/accountsPage.htm",controller:"accountsController",controllerAs:"vm"}).when("/teamMember/:param",{templateUrl:"views/internalActtsPage.htm",controller:"internalActtsController",controllerAs:"vm",resolve:{authentication:authentication}})}function authentication(){console.log("authenticating")}config.$inject=["$routeProvider"];var ahNuts=angular.module("ahNuts",["ngRoute"]);angular.module("ahNuts").controller("aProductController",aProductController),aProductController.$inject=["$log","$routeParams","$location"],angular.module("ahNuts").controller("accountsController",accountsController),accountsController.$inject=["$log","$routeParams","$location"],angular.module("ahNuts").controller("allProductsController",allProductsController),allProductsController.$inject=["$log","$routeParams","$location"],angular.module("ahNuts").controller("cartController",cartController),cartController.$inject=["$log","$routeParams","$location"],angular.module("ahNuts").controller("checkoutController",checkoutController),checkoutController.$inject=["$log","$routeParams","$location"],angular.module("ahNuts").controller("internalActtsController",internalActtsController),internalActtsController.$inject=["$log","$routeParams","$location","dataServices"],angular.module("ahNuts").controller("landingController",landingController),landingController.$inject=["$scope","$log","$routeParams","$location","dataServices"],angular.module("ahNuts").controller("locationsController",locationsController),locationsController.$inject=["$log","$routeParams","$location"],angular.module("ahNuts").controller("loginController",loginController),loginController.$inject=["$log","$routeParams","$location","dataServices"],angular.module("ahNuts").controller("mainController",mainController),mainController.$inject=["$scope","$log","$routeParams","$location"],angular.module("ahNuts").controller("productGettingController",productGettingController),productGettingController.$inject=["$log","$routeParams","$location"],angular.module("ahNuts").directive("ahHeader",ahHeader),angular.module("ahNuts").directive("ahFooter",ahFooter),angular.module("ahNuts").directive("cartNavigation",cartNavigation),angular.module("ahNuts").directive("cartSummary",cartSummary),angular.module("ahNuts").directive("couponSubmission",couponSubmission),angular.module("ahNuts").directive("createNewAccount",createNewAccount),angular.module("ahNuts").directive("featuredProducts",featuredProducts),angular.module("ahNuts").directive("fullProductProfile",fullProductProfile),angular.module("ahNuts").directive("heroBanner",heroBanner),angular.module("ahNuts").directive("passwordReset",passwordReset),angular.module("ahNuts").directive("pickupOrDelivery",pickupOrDelivery),angular.module("ahNuts").directive("primaryContent",primaryContent),angular.module("ahNuts").directive("userDashboard",userDashboard),angular.module("ahNuts").factory("dataServices",dataServices),dataServices.$inject=["$log","$http"],angular.module("ahNuts").config(config);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
